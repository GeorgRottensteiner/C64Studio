<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>net3.5;net4.8;net8.0-windows;net8.0</TargetFrameworks>
    <OutputType>Exe</OutputType>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <IsWindows Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' == 'true'">true</IsWindows>
    <IsOSX Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'">true</IsOSX>
    <IsLinux Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">true</IsLinux>
	  <UseWindowsForms Condition="'$(TargetFramework)' != 'net8.0'">true</UseWindowsForms>
	  <ImportWindowsDesktopTargets Condition="'$(TargetFramework)' != 'net8.0'">true</ImportWindowsDesktopTargets>
	  <RuntimeIdentifiers>win-x86;win-x64;linux-x64</RuntimeIdentifiers>
    <Platforms>AnyCPU;ARM64</Platforms>
  </PropertyGroup>
  <PropertyGroup Condition="'$(IsWindows)'=='true'">
    <DefineConstants>OS_WINDOWS</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFramework)' == 'net8.0'">
	<DefineConstants>OS_CROSS_PLATFORM</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Platform)' == 'AnyCPU' ">
    <ApplicationIcon>c64.ico</ApplicationIcon>
    <PostBuildEvent>
      if not exist "$(SolutionDir)C64StudioRelease\$(TargetFramework)\$(Platform)\C64Ass" md "$(SolutionDir)C64StudioRelease\$(TargetFramework)\$(Platform)\C64Ass"
      copy "$(TargetDir)C64Ass.exe" "$(SolutionDir)C64StudioRelease\$(TargetFramework)\$(Platform)\C64Ass\C64Ass.exe"
      if exist "$(TargetDir)*.dll" copy "$(TargetDir)*.dll" "$(SolutionDir)C64StudioRelease\$(TargetFramework)\$(Platform)\C64Ass"
      if exist "$(TargetDir)*.runtimeconfig.json" copy "$(TargetDir)*.runtimeconfig.json" "$(SolutionDir)C64StudioRelease\$(TargetFramework)\$(Platform)\C64Ass"
    </PostBuildEvent>
    <PlatformTarget>anycpu</PlatformTarget>
  </PropertyGroup>
  <ItemGroup>
    <Content Include="c64.ico" />
  </ItemGroup>
  <ItemGroup>
    <Compile Remove="CompileConfig.cs" />
  </ItemGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <PostBuildEvent Condition="'$(OS)' == 'Windows_NT' ">
      if not exist "$(SolutionDir)C64StudioRelease\$(TargetFramework)\$(Platform)\C64Ass" md "$(SolutionDir)C64StudioRelease\$(TargetFramework)\$(Platform)\C64Ass"
      copy "$(TargetDir)C64Ass.exe" "$(SolutionDir)C64StudioRelease\$(TargetFramework)\$(Platform)\C64Ass\C64Ass.exe"
      if exist "$(TargetDir)*.dll" copy "$(TargetDir)*.dll" "$(SolutionDir)C64StudioRelease\$(TargetFramework)\$(Platform)\C64Ass"
      if exist "$(TargetDir)*.runtimeconfig.json" copy "$(TargetDir)*.runtimeconfig.json" "$(SolutionDir)C64StudioRelease\$(TargetFramework)\$(Platform)\C64Ass"
    </PostBuildEvent>
    <PostBuildEvent Condition="'$(OS)' == 'Unix' ">
      mkdir /p "$(SolutionDir)C64StudioRelease\$(TargetFramework)\$(Platform)\C64Ass"
      cp "$(TargetDir)C64Ass.exe" "$(SolutionDir)C64StudioRelease\$(TargetFramework)\$(Platform)\C64Ass"
    </PostBuildEvent>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Platform)' == 'ARM64' ">
    <PostBuildEvent>
      if not exist "$(SolutionDir)C64StudioRelease\$(TargetFramework)\$(Platform)\C64Ass" md "$(SolutionDir)C64StudioRelease\$(TargetFramework)\$(Platform)\C64Ass"
      copy "$(TargetDir)C64Ass.exe" "$(SolutionDir)C64StudioRelease\$(TargetFramework)\$(Platform)\C64Ass\C64Ass.exe"
      if exist "$(TargetDir)*.dll" copy "$(TargetDir)*.dll" "$(SolutionDir)C64StudioRelease\$(TargetFramework)\$(Platform)\C64Ass"
      if exist "$(TargetDir)*.runtimeconfig.json" copy "$(TargetDir)*.runtimeconfig.json" "$(SolutionDir)C64StudioRelease\$(TargetFramework)\$(Platform)\C64Ass"
    </PostBuildEvent>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.DotNet.UpgradeAssistant.Extensions.Default.Analyzers" Version="0.4.421302">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <Import Project="..\Common\Common.projitems" Label="Shared" />
  <Import Project="..\CommonWindows\CommonWindows.projitems" Label="Shared" Condition="'$(TargetFramework)' == 'net3.5'" />
  <Import Project="..\CommonWindows\CommonWindows.projitems" Label="Shared" Condition="'$(TargetFramework)' == 'net4.8'" />
  <Import Project="..\CommonWindows\CommonWindows.projitems" Label="Shared" Condition="'$(TargetFramework)' == 'net8.0-windows'" />
  <Import Project="..\C64Models\C64Models.projitems" Label="Shared" />
</Project>